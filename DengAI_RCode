train<-read.csv("train.imputed.csv",header=TRUE)
test<-read.csv("test.total_cases.imputed.csv",header=TRUE)


test.total_cases <- data.frame(total_cases = rep("None", nrow(test)), test[,])


data.combined <- rbind(train,test.total_cases)

data.combined.c<-read.csv("data.combined.csv",header=TRUE)
data.combined.c1<-data.frame(data.combined.c[1:1872,])

train.c1<-data.frame(train[1:1456,])

data.combined$year<-as.factor(data.combined$year)
data.combined$year
str(data.combined$year)
data.combined$week_start_date<-as.character(data.combined$week_start_date)
table(data.combined$total_cases)
table(data.combined$city)

library(ggplot2)
data.combined$weekofyear<-as.factor(data.combined$weekofyear)
data.combined$total_cases<-as.numeric(data.combined$total_cases)
ggplot(data.combined[1:1456,], aes(weekofyear,total_cases))+
  geom_bar(stat="identity")+
  facet_wrap(~city+year) + 
  ggtitle("city") +
  xlab("week of years") +
  ylab("Total Cases") +
  ylim(0,150)
counts<-table(data.combined[1:1456])
barplot(counts)
str(data.combined$total_cases)
data.combined$total_cases<-as.factor(data.combined$total_cases)
summary(data.combined)
library(mice)
library(missForest)
train.mis <- prodNA(train, noNA = 0.1)


 summary(train.mis)

 train.mis <- subset(train.mis, select = -c(Species))
 summary(train.mis)


imputed_train <- mice(train.mis, m=5, maxit =10 , method = 'pmm', seed = 500)
summary(imputed_train)
complete_train <- complete(imputed_train,2)
summary(complete_train)

library(randomForest)



rf.train.1 <- train[ c("city", "year")]

rf.label <- as.factor(train$total_cases)
length(rf.train.1)
length(rf.label)
set.seed(1234)
rf.1 <- randomForest(x = rf.train.1, y = rf.label, importance = TRUE, ntree = 2000)
rf.1
varImpPlot(rf.1)

rf.train.2 <- train[ c("city", "weekofyear")]

rf.label <- as.factor(train$total_cases)
length(rf.train.2)
length(rf.label)
set.seed(1234)
rf.2 <- randomForest(x = rf.train.2, y = rf.label, importance = TRUE, ntree = 2000)
rf.2
varImpPlot(rf.2)


rf.train.3 <- train[ c("city","year" ,"weekofyear")]

rf.label <- as.factor(train$total_cases)

set.seed(1234)
rf.3 <- randomForest(x = rf.train.3, y = rf.label, importance = TRUE, ntree = 2000)
rf.3
varImpPlot(rf.3)

rf.train.4 <- data.combined.c1[1:1456, c("city","year" ,"weekofyear","ndvi_ne","ndvi_nw","ndvi_se","ndvi_sw","precipitation_amt_mm","reanalysis_air_temp_k","reanalysis_avg_temp_k","reanalysis_dew_point_temp_k","reanalysis_max_air_temp_k","reanalysis_min_air_temp_k","reanalysis_precip_amt_kg_per_m2","reanalysis_relative_humidity_percent","reanalysis_sat_precip_amt_mm","reanalysis_specific_humidity_g_per_kg","reanalysis_tdtr_k","station_avg_temp_c","station_diur_temp_rng_c","station_max_temp_c","station_min_temp_c","station_precip_mm")]

rf.label <- as.factor(train.c1$total_cases)

set.seed(1234)
rf.4 <- randomForest(x = rf.train.4, y = rf.label, importance = TRUE, ntree = 2000)
rf.4
varImpPlot(rf.4)
sapply(complete_train, function(x) sum(is.na(x)))

library(Amelia)

data("complete_train")

str(complete_train.amelia.mis)
complete_train.amelia.mis <- prodNA(complete_train, noNA = 0.1)
 



 library(hmisc)
 complete_train.amelia.mis$week_start_date<-as.factor(complete_train.amelia.mis$week_start_date)
 impute_arg <- aregImpute(~ city+ year+week_start_date + weekofyear + ndvi_ne +ndvi_nw +ndvi_se +ndvi_sw +precipitation_amt_mm+ reanalysis_air_temp_k+reanalysis_avg_temp_k +reanalysis_dew_point_temp_k +reanalysis_max_air_temp_k + reanalysis_min_air_temp_k +reanalysis_precip_amt_kg_per_m2 +reanalysis_relative_humidity_percent +reanalysis_sat_precip_amt_mm+reanalysis_specific_humidity_g_per_kg+reanalysis_tdtr_k +station_avg_temp_c +station_diur_temp_rng_c +station_max_temp_c +station_min_temp_c +station_precip_mm+ total_cases, data = complete_train.amelia.mis, n.impute = 5)
 
 impute_arg
 
 imputed <- as.data.frame(impute.transcan(impute_arg, imputation=1, data=complete_train.amelia.mis, list.out=TRUE, pr=FALSE, check=FALSE)) 
  
 rf.train.5 <- data.combined.c1[1:1456,c("city","year","weekofyear","reanalysis_air_temp_k","reanalysis_avg_temp_k","reanalysis_dew_point_temp_k","station_avg_temp_c","reanalysis_relative_humidity_percent","reanalysis_specific_humidity_g_per_kg","reanalysis_tdtr_k","station_precip_mm")]
 
 rf.label <- as.factor(train.c1$total_cases)
 
 set.seed(1234)
 rf.5 <- randomForest(x = rf.train.5, y = rf.label, importance = TRUE, ntree = 10000)
 rf.5
 varImpPlot(rf.5)
 
 
 data.combined$weekofyear<-as.factor(data.combined$weekofyear)
 data.combined$city<-as.factor(data.combined$city)
 data.combined$week_start_date<-as.character(week_start_date)
 data.combined.mis <- prodNA(data.combined, noNA = 0.1)
 
data.combined_impute_arg <- aregImpute(~ ndvi_ne +ndvi_nw +ndvi_se +ndvi_sw +precipitation_amt_mm+ reanalysis_air_temp_k+reanalysis_avg_temp_k +reanalysis_dew_point_temp_k +reanalysis_max_air_temp_k + reanalysis_min_air_temp_k +reanalysis_precip_amt_kg_per_m2 +reanalysis_relative_humidity_percent +reanalysis_sat_precip_amt_mm+reanalysis_specific_humidity_g_per_kg+reanalysis_tdtr_k +station_avg_temp_c +station_diur_temp_rng_c +station_max_temp_c +station_min_temp_c +station_precip_mm+ total_cases, data = data.combined.mis, n.impute = 5)
 
 data.combined_impute_arg
 
 data.combined.imputed <- as.data.frame(impute.transcan(impute_arg, imputation=1, data=data.combined_impute_arg, list.out=TRUE, pr=FALSE, check=FALSE)) 
 
 
 data.combined.mis <- prodNA(data.combined, noNA = 0.1)

 
 test.total_cases.mis<-prodNA(test.total_cases, noNA = 0.1)
 
 test.total_cases_impute_arg <- aregImpute(~ ndvi_ne +ndvi_nw +ndvi_se +ndvi_sw +precipitation_amt_mm+ reanalysis_air_temp_k+reanalysis_avg_temp_k +reanalysis_dew_point_temp_k +reanalysis_max_air_temp_k + reanalysis_min_air_temp_k +reanalysis_precip_amt_kg_per_m2 +reanalysis_relative_humidity_percent +reanalysis_sat_precip_amt_mm+reanalysis_specific_humidity_g_per_kg+reanalysis_tdtr_k +station_avg_temp_c +station_diur_temp_rng_c +station_max_temp_c +station_min_temp_c +station_precip_mm, data = test.total_cases.mis, n.impute = 5)
 test.total_cases_impute_arg
 
 test.total_cases.imputed <- as.data.frame(impute.transcan(test.total_cases_impute_arg, imputation=1, data=test.total_cases.mis, list.out=TRUE, pr=FALSE, check=FALSE)) 
 
 write.csv(test.total_cases.imputed, "test.total_cases.imputed.csv")
 
 train.mis<-prodNA(train, noNA = 0.1)
 
 train_impute_arg <- aregImpute(~ ndvi_ne +ndvi_nw +ndvi_se +ndvi_sw +precipitation_amt_mm+ reanalysis_air_temp_k+reanalysis_avg_temp_k +reanalysis_dew_point_temp_k +reanalysis_max_air_temp_k + reanalysis_min_air_temp_k +reanalysis_precip_amt_kg_per_m2 +reanalysis_relative_humidity_percent +reanalysis_sat_precip_amt_mm+reanalysis_specific_humidity_g_per_kg+reanalysis_tdtr_k +station_avg_temp_c +station_diur_temp_rng_c +station_max_temp_c +station_min_temp_c +station_precip_mm+total_cases, data = train.mis, n.impute = 5)
 test.total_cases_impute_arg
 
 train.imputed <- as.data.frame(impute.transcan(train_impute_arg, imputation=1, data=train.mis, list.out=TRUE, pr=FALSE, check=FALSE)) 
 
 write.csv(train.imputed, "train.imputed.csv")
 
 write.csv(data.combined,"data.combined.csv")
 
 test.submit.df <- data.combined.c1[1457:1872,c("city","year","weekofyear","reanalysis_air_temp_k","reanalysis_avg_temp_k","reanalysis_dew_point_temp_k","station_avg_temp_c","reanalysis_relative_humidity_percent","reanalysis_specific_humidity_g_per_kg","reanalysis_tdtr_k","station_precip_mm") ]
 
 # Make predictions
 rf.5.preds <- predict(rf.5, test.submit.df)
 table(rf.5.preds)
 
 # Write out a CSV file for submission to Kaggle
 submit.df <- data.frame(city = rep(1457:1872),year=rep(1457:1872),weekofyear=rep(1457:1872), total_cases = rf.5.preds)
 
 write.csv(submit.df, file = "DengAI_SUB_09122017_1.csv", row.names = FALSE)
 

 
 
 rf.train.6 <- data.combined.c1[1:1456, c("reanalysis_dew_point_temp_k","reanalysis_specific_humidity_g_per_kg","station_avg_temp_c","station_min_temp_c")]
 
 rf.label <- as.factor(train.c1$total_cases)
 
 set.seed(1234)
 rf.6 <- randomForest(x = rf.train.6, y = rf.label, importance = TRUE, ntree = 2000)
 rf.6
 varImpPlot(rf.6)
 
 test.submit.df <- data.combined.c1[1457:1872,c("reanalysis_dew_point_temp_k","reanalysis_specific_humidity_g_per_kg","station_avg_temp_c","station_min_temp_c")]
 
 # Make predictions
 rf.6.preds <- predict(rf.6, test.submit.df)
 table(rf.6.preds)
 
 # Write out a CSV file for submission
 submit.df <- data.frame(city = rep(1457:1872),year=rep(1457:1872),weekofyear=rep(1457:1872), total_cases = rf.5.preds)
 
 write.csv(submit.df, file = "DengAI_SUB_09122017_2.csv", row.names = FALSE)
 write.csv(train.c1,file="train.imputed.csv",row.names = FALSE)
 write.csv(data.combined.c1,file="data.combined.imputed.csv",row.names = FALSE)
 
